import 'dart:core';import 'package:conditional/conditional.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:form_udemycourse/modules/todo/cubit/cubit.dart';import 'package:form_udemycourse/modules/todo/cubit/states.dart';import 'package:intl/intl.dart';class HomeLayout extends StatelessWidget {  var scaffoldKey = GlobalKey<ScaffoldState>();  var titleController = TextEditingController();  var timeController = TextEditingController();  var dateController = TextEditingController();  var formKey = GlobalKey<FormState>();  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => AppCubit()..createDatabase(),      child: BlocConsumer<AppCubit, AppStates>(          listener: (context, state) {            if (state is AppInsertDatabaseState) Navigator.pop(context);      }, builder: (context, state) {        AppCubit cubit = AppCubit.get(context);        return Scaffold(          key: scaffoldKey,          appBar: AppBar(            title: Text(cubit.appBar[cubit.currentIndex]),          ),          body: Conditional(              condition: cubit.newTasks.length >= 0,              onConditionFalse: Center(child: CircularProgressIndicator()),              onConditionTrue: cubit.screens[cubit.currentIndex]),          floatingActionButton: FloatingActionButton(            onPressed: () {              if (cubit.isBottomSheetShown) {                if (formKey.currentState.validate()) {                  cubit.insertToDatabase(                    title: titleController.text,                    date: dateController.text,                    time: timeController.text,                  );                }              } else {                scaffoldKey.currentState                    .showBottomSheet(                        (context) => Container(                              padding: EdgeInsets.all(20.0),                              color: Colors.white,                              child: Form(                                key: formKey,                                child: Column(                                  mainAxisSize: MainAxisSize.min,                                  children: [                                    TextFormField(                                      controller: titleController,                                      keyboardType: TextInputType.text,                                      validator: (value) {                                        if (value.isEmpty) {                                          return 'Task must not be empty';                                        } else                                          return null;                                      },                                      decoration: InputDecoration(                                        prefixIcon: Icon(Icons.title),                                        labelText: 'Task Title',                                        border: OutlineInputBorder(                                            borderSide: BorderSide(                                                color: Colors.black54),                                            borderRadius:                                                BorderRadius.circular(10)),                                      ),                                    ),                                    SizedBox(                                      height: 10.0,                                    ),                                    TextFormField(                                      onTap: () {                                        showTimePicker(                                                context: context,                                                initialTime: TimeOfDay.now())                                            .then((value) {                                          timeController.text =                                              value.format(context);                                        });                                      },                                      controller: timeController,                                      keyboardType: TextInputType.datetime,                                      validator: (value) {                                        if (value.isEmpty) {                                          return 'Time must not be empty';                                        } else                                          return null;                                      },                                      decoration: InputDecoration(                                        prefixIcon: Icon(Icons.watch_later),                                        labelText: 'Task Time',                                        border: OutlineInputBorder(                                            borderSide: BorderSide(                                                color: Colors.black54),                                            borderRadius:                                                BorderRadius.circular(10)),                                      ),                                    ),                                    SizedBox(                                      height: 10.0,                                    ),                                    TextFormField(                                      onTap: () {                                        showDatePicker(                                                context: context,                                                initialDate: DateTime.now(),                                                firstDate: DateTime.now(),                                                lastDate: DateTime.parse(                                                    '2021-05-03'))                                            .then((value) {                                          dateController.text =                                              DateFormat.yMMMd().format(value);                                        });                                      },                                      controller: dateController,                                      keyboardType: TextInputType.datetime,                                      validator: (value) {                                        if (value.isEmpty) {                                          return 'Date must not be empty';                                        } else                                          return null;                                      },                                      decoration: InputDecoration(                                        prefixIcon: Icon(Icons.calendar_today),                                        labelText: 'Task Time',                                        border: OutlineInputBorder(                                            borderSide: BorderSide(                                                color: Colors.black54),                                            borderRadius:                                                BorderRadius.circular(10)),                                      ),                                    ),                                  ],                                ),                              ),                            ),                        elevation: 20.0)                    .closed                    .then((value) {                  cubit.changeBottomSheetState(isShow: false, icon: Icons.edit);                  titleController.text ='';                  timeController.text ='';                  dateController.text ='';                });              }              cubit.changeBottomSheetState(isShow: true, icon: Icons.add);            },            child: Icon(cubit.fabIcon),          ),          bottomNavigationBar: BottomNavigationBar(            type: BottomNavigationBarType.fixed,            currentIndex: cubit.currentIndex,            onTap: (index) {              cubit.changeIndex(index);            },            items: [              BottomNavigationBarItem(icon: Icon(Icons.menu), label: 'Tasks'),              BottomNavigationBarItem(                  icon: Icon(Icons.check_box), label: 'Done'),              BottomNavigationBarItem(                  icon: Icon(Icons.archive), label: 'Archived'),            ],          ),        );      }),    );  }}